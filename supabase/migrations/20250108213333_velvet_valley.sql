-- Create notifications table\nCREATE TABLE notifications (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID REFERENCES profiles(id) ON DELETE CASCADE NOT NULL,\n  type TEXT NOT NULL,\n  message TEXT NOT NULL,\n  read BOOLEAN DEFAULT false,\n  data JSONB DEFAULT NULL,\n  created_at TIMESTAMPTZ DEFAULT now()\n);
\n\n-- Enable RLS\nALTER TABLE notifications ENABLE ROW LEVEL SECURITY;
\n\n-- Create policies\nCREATE POLICY "Users can view their own notifications"\n  ON notifications\n  FOR SELECT\n  TO authenticated\n  USING (user_id = auth.uid());
\n\nCREATE POLICY "Users can update their own notifications"\n  ON notifications\n  FOR UPDATE\n  TO authenticated\n  USING (user_id = auth.uid());
\n\n-- Create indexes\nCREATE INDEX idx_notifications_user_id ON notifications(user_id);
\nCREATE INDEX idx_notifications_created_at ON notifications(created_at);
\nCREATE INDEX idx_notifications_read ON notifications(read);
\n\n-- Create function to create bid notifications\nCREATE OR REPLACE FUNCTION create_bid_notification()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Notify seller of new bid\n  IF TG_OP = 'INSERT' THEN\n    INSERT INTO notifications (user_id, type, message, data)\n    SELECT \n      items.seller_id,\n      'bid_received',\n      'You received a new bid on ' || items.title,\n      jsonb_build_object(\n        'bid_id', NEW.id,\n        'item_id', NEW.item_id,\n        'amount', NEW.amount\n      )\n    FROM items\n    WHERE items.id = NEW.item_id;
\n  END IF;
\n\n  -- Notify bidder of bid status change\n  IF TG_OP = 'UPDATE' AND OLD.status != NEW.status THEN\n    INSERT INTO notifications (user_id, type, message, data)\n    SELECT \n      NEW.bidder_id,\n      'bid_' || NEW.status,\n      CASE NEW.status\n        WHEN 'accepted' THEN 'Your bid was accepted!'\n        WHEN 'rejected' THEN 'Your bid was rejected'\n        ELSE 'Your bid status was updated to ' || NEW.status\n      END,\n      jsonb_build_object(\n        'bid_id', NEW.id,\n        'item_id', NEW.item_id,\n        'status', NEW.status\n      );
\n  END IF;
\n\n  RETURN NEW;
\nEND;
\n$$ LANGUAGE plpgsql SECURITY DEFINER;
\n\n-- Create triggers for bid notifications\nDROP TRIGGER IF EXISTS on_bid_created ON bids;
\nCREATE TRIGGER on_bid_created\n  AFTER INSERT ON bids\n  FOR EACH ROW\n  EXECUTE FUNCTION create_bid_notification();
\n\nDROP TRIGGER IF EXISTS on_bid_updated ON bids;
\nCREATE TRIGGER on_bid_updated\n  AFTER UPDATE OF status ON bids\n  FOR EACH ROW\n  EXECUTE FUNCTION create_bid_notification();
;
