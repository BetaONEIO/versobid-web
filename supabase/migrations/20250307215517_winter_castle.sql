\n\n-- Create email templates table if it doesn't exist\nCREATE TABLE IF NOT EXISTS email_templates (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  name TEXT NOT NULL UNIQUE,\n  subject TEXT NOT NULL,\n  html_content TEXT NOT NULL,\n  created_at TIMESTAMPTZ DEFAULT now()\n);
\n\n-- Insert welcome email template\nINSERT INTO email_templates (name, subject, html_content) VALUES\n('welcome', 'Welcome to VersoBid!', '\n<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif;
 line-height: 1.6;
 }\n    .container { max-width: 600px;
 margin: 0 auto;
 padding: 20px;
 }\n    .header { background-color: #4F46E5;
 color: white;
 padding: 20px;
 text-align: center;
 }\n    .content { padding: 20px;
 }\n    .button {\n      display: inline-block;
\n      padding: 12px 24px;
\n      background-color: #4F46E5;
\n      color: white;
\n      text-decoration: none;
\n      border-radius: 4px;
\n      margin: 20px 0;
\n    }\n  </style>\n</head>\n<body>\n  <div class="container">\n    <div class="header">\n      <h1>Welcome to VersoBid!</h1>\n    </div>\n    <div class="content">\n      <h2>Hi {{name}},</h2>\n      <p>Thank you for joining VersoBid! We''re excited to have you as part of our community.</p>\n      <p>With VersoBid, you can:</p>\n      <ul>\n        <li>Post items you want to buy</li>\n        <li>Receive competitive bids from sellers</li>\n        <li>Make secure payments through our platform</li>\n      </ul>\n      <a href="{{dashboard_link}}" class="button">Get Started</a>\n      <p>If you have any questions, feel free to reach out to our support team.</p>\n      <p>Best regards,<br>The VersoBid Team</p>\n    </div>\n  </div>\n</body>\n</html>\n') ON CONFLICT (name) DO UPDATE \nSET subject = EXCLUDED.subject,\n    html_content = EXCLUDED.html_content;
\n\n-- Create function to send welcome email\nCREATE OR REPLACE FUNCTION send_welcome_email()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Insert welcome email into email_logs\n  INSERT INTO email_logs (\n    recipient,\n    subject,\n    template_name,\n    status,\n    data\n  ) VALUES (\n    NEW.email,\n    'Welcome to VersoBid!',\n    'welcome',\n    'pending',\n    jsonb_build_object(\n      'name', COALESCE(NEW.full_name, NEW.username),\n      'dashboard_link', current_setting('app.frontend_url', true) || '/dashboard'\n    )\n  );
\n\n  -- Create welcome notification\n  INSERT INTO notifications (\n    user_id,\n    type,\n    message,\n    data\n  ) VALUES (\n    NEW.id,\n    'welcome',\n    'Welcome to VersoBid! Complete your profile to get started.',\n    jsonb_build_object(\n      'profile_link', '/profile/' || NEW.username\n    )\n  );
\n\n  RETURN NEW;
\nEND;
\n$$ LANGUAGE plpgsql SECURITY DEFINER;
\n\n-- Create trigger for welcome email\nDROP TRIGGER IF EXISTS send_welcome_email_trigger ON profiles;
\nCREATE TRIGGER send_welcome_email_trigger\n  AFTER INSERT ON profiles\n  FOR EACH ROW\n  EXECUTE FUNCTION send_welcome_email();
\n\n-- Enable RLS on email_templates\nALTER TABLE email_templates ENABLE ROW LEVEL SECURITY;
\n\n-- Drop existing policy if it exists\nDROP POLICY IF EXISTS "Allow read access to email templates" ON email_templates;
\n\n-- Create policy for email templates\nCREATE POLICY "Allow read access to email templates"\n  ON email_templates\n  FOR SELECT\n  TO authenticated\n  USING (true);
\n\n-- Create index on template name for faster lookups\nCREATE INDEX IF NOT EXISTS idx_email_templates_name ON email_templates(name);
;
