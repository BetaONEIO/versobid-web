-- Create items table if it doesn't exist\nCREATE TABLE IF NOT EXISTS items (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  title TEXT NOT NULL,\n  description TEXT,\n  min_price NUMERIC NOT NULL CHECK (min_price >= 0),\n  max_price NUMERIC NOT NULL CHECK (max_price >= min_price),\n  seller_id UUID REFERENCES profiles(id) NOT NULL,\n  category TEXT NOT NULL,\n  shipping_options JSONB DEFAULT '[]',\n  condition TEXT,\n  status TEXT NOT NULL DEFAULT 'active',\n  created_at TIMESTAMPTZ DEFAULT now(),\n  CHECK (status IN ('active', 'completed', 'archived'))\n);
\n\n-- Enable RLS\nALTER TABLE items ENABLE ROW LEVEL SECURITY;
\n\n-- Create policies\nCREATE POLICY "items_select_policy"\n  ON items\n  FOR SELECT\n  TO authenticated, anon\n  USING (true);
\n\nCREATE POLICY "items_insert_policy"\n  ON items\n  FOR INSERT\n  TO authenticated\n  WITH CHECK (auth.uid() = seller_id);
\n\nCREATE POLICY "items_update_policy"\n  ON items\n  FOR UPDATE\n  TO authenticated\n  USING (auth.uid() = seller_id)\n  WITH CHECK (auth.uid() = seller_id);
\n\n-- Create indexes\nCREATE INDEX IF NOT EXISTS idx_items_seller_id ON items(seller_id);
\nCREATE INDEX IF NOT EXISTS idx_items_category ON items(category);
\nCREATE INDEX IF NOT EXISTS idx_items_status ON items(status);
\n\n-- Grant permissions\nGRANT ALL ON items TO authenticated;
\nGRANT SELECT ON items TO anon;
;
