-- Drop existing policies by name\nDROP POLICY IF EXISTS "profiles_select_policy_v4" ON profiles;
\nDROP POLICY IF EXISTS "profiles_insert_policy_v4" ON profiles;
\nDROP POLICY IF EXISTS "profiles_update_policy_v4" ON profiles;
\nDROP POLICY IF EXISTS "profiles_select_v3" ON profiles;
\nDROP POLICY IF EXISTS "profiles_insert_v3" ON profiles;
\nDROP POLICY IF EXISTS "profiles_update_v3" ON profiles;
\nDROP POLICY IF EXISTS "allow_email_existence_check" ON profiles;
\nDROP POLICY IF EXISTS "public_profiles_access" ON profiles;
\n\n-- Create new policies with unique names\nCREATE POLICY "profiles_select_policy_v5"\n  ON profiles\n  FOR SELECT\n  TO authenticated, anon\n  USING (true);
\n\nCREATE POLICY "profiles_insert_policy_v5"\n  ON profiles\n  FOR INSERT\n  TO authenticated\n  WITH CHECK (auth.uid() = id);
\n\nCREATE POLICY "profiles_update_policy_v5"\n  ON profiles\n  FOR UPDATE\n  TO authenticated\n  USING (auth.uid() = id)\n  WITH CHECK (auth.uid() = id);
\n\n-- Ensure proper grants\nGRANT USAGE ON SCHEMA public TO anon, authenticated;
\nGRANT SELECT, INSERT, UPDATE ON profiles TO authenticated;
\nGRANT SELECT ON profiles TO anon;
\n\n-- Refresh RLS\nALTER TABLE profiles DISABLE ROW LEVEL SECURITY;
\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;
;
