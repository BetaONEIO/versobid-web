-- Drop existing policies and triggers\nDROP POLICY IF EXISTS "allow_public_read" ON profiles;
\nDROP POLICY IF EXISTS "allow_auth_insert" ON profiles;
\nDROP POLICY IF EXISTS "allow_individual_update" ON profiles;
\nDROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
\nDROP FUNCTION IF EXISTS handle_new_user();
\n\n-- Enable RLS\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;
\n\n-- Create simplified policies\nCREATE POLICY "profiles_read_policy"\n  ON profiles\n  FOR SELECT\n  TO public\n  USING (true);
\n\nCREATE POLICY "profiles_insert_policy"\n  ON profiles\n  FOR INSERT\n  TO service_role\n  WITH CHECK (true);
\n\nCREATE POLICY "profiles_update_policy"\n  ON profiles\n  FOR UPDATE\n  TO authenticated\n  USING (auth.uid() = id);
\n\n-- Ensure proper grants\nGRANT USAGE ON SCHEMA public TO anon, authenticated, service_role;
\nGRANT ALL ON profiles TO service_role;
\nGRANT SELECT ON profiles TO anon;
\nGRANT SELECT, UPDATE ON profiles TO authenticated;
\n\n-- Create improved function to handle new user creation\nCREATE OR REPLACE FUNCTION handle_new_user()\nRETURNS trigger\nSECURITY DEFINER\nSET search_path = public\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  -- Insert the profile with error handling\n  BEGIN\n    INSERT INTO public.profiles (\n      id,\n      email,\n      username,\n      full_name,\n      created_at,\n      is_admin,\n      avatar_url,\n      shipping_address,\n      payment_setup,\n      onboarding_completed\n    ) VALUES (\n      NEW.id,\n      NEW.email,\n      NEW.raw_user_meta_data->>'username',\n      NEW.raw_user_meta_data->>'full_name',\n      NOW(),\n      false,\n      null,\n      null,\n      false,\n      false\n    );
\n  EXCEPTION WHEN others THEN\n    -- Log the error but don't prevent user creation\n    RAISE WARNING 'Error creating profile for user %: %', NEW.id, SQLERRM;
\n  END;
\n  \n  RETURN NEW;
\nEND;
\n$$;
\n\n-- Create trigger for automatic profile creation\nCREATE TRIGGER on_auth_user_created\n  AFTER INSERT ON auth.users\n  FOR EACH ROW\n  EXECUTE FUNCTION handle_new_user();
\n\n-- Add indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_profiles_email ON profiles(email);
\nCREATE INDEX IF NOT EXISTS idx_profiles_username ON profiles(username);
;
