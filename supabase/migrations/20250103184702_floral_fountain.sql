\n\n-- Drop all email-related constraints\nALTER TABLE profiles \nDROP CONSTRAINT IF EXISTS profiles_email_match_auth,\nDROP CONSTRAINT IF EXISTS profiles_email_check;
\n\n-- Recreate the validate_profile_email function with better error handling\nCREATE OR REPLACE FUNCTION validate_profile_email()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Only validate if email is being changed\n  IF TG_OP = 'UPDATE' AND NEW.email = OLD.email THEN\n    RETURN NEW;
\n  END IF;
\n\n  -- Check if email exists in auth.users\n  IF EXISTS (\n    SELECT 1 FROM profiles \n    WHERE email = NEW.email \n    AND id != NEW.id\n  ) THEN\n    RAISE EXCEPTION 'Email already exists';
\n  END IF;
\n\n  RETURN NEW;
\nEND;
\n$$ LANGUAGE plpgsql SECURITY DEFINER;
\n\n-- Recreate the trigger\nDROP TRIGGER IF EXISTS validate_profile_email_trigger ON profiles;
\nCREATE TRIGGER validate_profile_email_trigger\nBEFORE INSERT OR UPDATE OF email ON profiles\nFOR EACH ROW\nEXECUTE FUNCTION validate_profile_email();
\n\n-- Ensure email index exists\nCREATE INDEX IF NOT EXISTS idx_profiles_email ON profiles(email);
;
